2. hello controller-
  packagecom.example.myfirstspringbootapp;  
 
importorg.springframework.web.bind.annotation.GetMapping;  
importorg.springframework.web.bind.annotation.RestController;  
 
 @RestController 
public class HelloController {  
 
 @GetMapping("/")  
 public String sayHello() {  
return "Hello, World!";  
 }   
 }  




------------------------------------------------------
4.
  plugins { 
id 'java-library' 
id 'maven-publish' 
id 'application' 
} 
 
application {  
mainClass = 'com.ppg4.ppg4.App' // Specify the main class here  
}  

add task-
  
  task hello {      
doLast {  
 println 'Hello, Gradle!'  
    }  
} 

------------------------------------------------------

7.

update sys
sudo apt update
sudo apt upgrade -y

install ansible:
sudo apt install ansible -y


  mkdir ~/ansible-demo 
 
cd ~/ansible-demo 

  nano inventory.ini

  [local] 
  localhostansible_connection=local


creating ansible playbook
nano server-setup.yml

- name: Install Nginx on Localhost
  hosts: local
  become: yes
  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Start Nginx Service
      service:
        name: nginx
        state: started
        enabled: yes

Step 4: Run the Playbook Locally

  sudo ansible -playbook -inventory.ini install_nginx.yml



-----------------==---------------
8.
<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven
4.0.0.xsd"> 
<modelVersion>4.0.0</modelVersion> 
 
<groupId>com.mavenproject10</groupId> 
<artifactId>project10</artifactId> 
<version>0.0.1-SNAPSHOT</version> 
<packaging>jar</packaging> 
 
<name>project10</name> 
<url>http://maven.apache.org</url> 
 
<properties> 
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 
<maven.compiler.source>17</maven.compiler.source> 
<maven.compiler.target>17</maven.compiler.target> 
</properties> 
 
<dependencies> 
<dependency> 
<groupId>junit</groupId> 
<artifactId>junit</artifactId> 
<version>3.8.1</version> 
<scope>test</scope> 
</dependency> 
</dependencies> 
 
<!-- Build section: defines how the project should be built --> 
<build> 
<plugins> 
<!-- Plugin for creating executable JAR files --> 
<plugin> 
<groupId>org.apache.maven.plugins</groupId> 
<artifactId>maven-jar-plugin</artifactId> 
<version>3.2.2</version> 
<configuration> 
<archive> 
<manifest> 
<mainClass>com.mavenproject10.project10.App</mainClass><!--ðŸ‘ˆ Change to your actual 
main class --> 
</manifest> 
</archive> 
</configuration> 
</plugin> 
</plugins> 
</build>
<project>
  
